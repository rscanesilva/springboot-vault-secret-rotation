# Nome da aplicação (usado pelo Vault para buscar segredos)
spring.application.name=vault-rotation

# Habilitar o Vault
spring.cloud.vault.enabled=true
spring.cloud.bootstrap.enabled=true
spring.config.import=vault://

# Configuração do Vault
spring.cloud.vault.uri=${VAULT_ADDR:http://vault.vault.svc.cluster.local:8200}
spring.cloud.vault.token=${VAULT_TOKEN}
spring.cloud.vault.scheme=http
spring.cloud.vault.fail-fast=false

# Configuração do ciclo de vida dos segredos
spring.cloud.vault.config.lifecycle.enabled=true
spring.cloud.vault.config.lifecycle.min-renewal=10s
spring.cloud.vault.config.lifecycle.expiry-threshold=1m

# Configuração do banco de dados secretos
spring.cloud.vault.database.enabled=true
spring.cloud.vault.database.role=payments-app
spring.cloud.vault.database.backend=database

# Configuração do backend de key-value para secrets estáticas
spring.cloud.vault.kv.enabled=true
spring.cloud.vault.kv.backend=kv
spring.cloud.vault.kv.default-context=vault-rotation
spring.cloud.vault.kv.application-name=${spring.application.name}

# URL do banco de dados (será substituída pelas credenciais do Vault)
spring.datasource.url=jdbc:mysql://${DATABASE_URL:host.minikube.internal:3306/payments}?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Expor endpoint de refresh para atualizações manuais se necessário
management.endpoints.web.exposure.include=refresh,health,info 