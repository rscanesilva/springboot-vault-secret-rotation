# Nome da aplicação (usado pelo Vault para buscar segredos)
spring.application.name=vault-rotation

# Configuração do Vault
spring.cloud.vault.uri=${VAULT_ADDR:http://localhost:8200}
spring.cloud.vault.token=${VAULT_TOKEN:hvs.EXAMPLE-TOKEN-VALUE}
spring.cloud.vault.scheme=http
spring.cloud.vault.fail-fast=true

# Configuração do ciclo de vida dos segredos
spring.cloud.vault.config.lifecycle.enabled=true
spring.cloud.vault.config.lifecycle.min-renewal=10s
spring.cloud.vault.config.lifecycle.expiry-threshold=1m

# Configuração do banco de dados secretos
spring.cloud.vault.database.enabled=true
spring.cloud.vault.database.role=payments-app
spring.cloud.vault.database.backend=database

# Configuração do backend de key-value para secrets estáticas
spring.cloud.vault.kv.enabled=true
spring.cloud.vault.kv.backend=kv
spring.cloud.vault.kv.default-context=application
spring.cloud.vault.kv.application-name=${spring.application.name}

# Importar configuração do Vault
spring.config.import=vault://

# URL do banco de dados
spring.datasource.url=jdbc:mysql://localhost:3306/payments?useSSL=false&allowPublicKeyRetrieval=true

# Expor endpoint de refresh para atualizações manuais se necessário
management.endpoints.web.exposure.include=refresh,health,info 